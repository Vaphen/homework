/*
 * configFileParser.cpp
 *
 *  Created on: 29.01.2015
 *      Author: john
 */

#include "ConfigFileParser.h"

#include "../constants/constants.h"
#include <fstream>
#include <iostream>
#include <string>
#include <map>

/**
 * TODO: add throw to correct error msg
 */

ConfigFileParser::ConfigFileParser() :
		pathToConfigFile("./" + std::string(PROGRAM_NAME) + ".conf") {

	writeConfigFile.open(pathToConfigFile);
	if(writeConfigFile.good()) {
		createConfigFile();
	}
	writeConfigFile.close();
	loadConfigs();
}

ConfigFileParser::~ConfigFileParser() {

}

void ConfigFileParser::createConfigFile() {
	writeConfigFile << "# This is an autogenerated file #";
	writeConfigFile << "#  	 	 DO NOT EDIT!!!         #";
	writeConfigFile << "\n\n";
	writeConfigFile << "# Path to the directory where all exercises were saved";
	writeConfigFile << "SAVE_DIRECTORY_PATH=" << "./";
}

void ConfigFileParser::loadConfigs() {
	readConfigFile.open(pathToConfigFile);
	std::string line = "";
	for(unsigned int i = 0; std::getline(readConfigFile, line); i++){
		//if(line[0] == '\n' || line.at(0) == '#') { i--; continue; }

		switch(i) {
		case 0:
			if(line.find("SAVE_DIRECTORY_PATH=") != 0) {
				throw "ERROR NOT FOUND";
			}
			configurations.at(ConfigParams::SAVE_DIRECTORY_PATH) = line;
			break;
		default:
			return;
		}

	}
	std::cout << configurations.at(ConfigParams::SAVE_DIRECTORY_PATH) << std::endl;
	readConfigFile.close();
}
